1.소프트웨어 생명 주기(Software Life Cycle)
->소프트웨어 개발 방법론의 바탕이 되는 것으로 소프트웨어를 개발하기 위해 정의하고 운용
유지보수 등의 과정을 각 단계별로 나눈 것이다. 

소프트웨어 생명 주기 모형에는 ex)폭포수 모형, 프로토타입 모형, 나선형 모형, 애자일 모형 


2.폭포수 모형
소프트웨어 개발도 이전 단계로 돌아갈 수 없다는 전제하에 각 단계를 확실히 매듭짓고 그 
결과를 철저하게 검토하여 승인 과정을 거진 후에 다음 단계를 진행하는 개발 방법론이다.

폭포수 모형은 소프트웨어 공학에서 가장 오래되고 가장 폭넓게 사용된 전통적인
소프트웨어 생명 주기 모형으로, 고전적 생명 주기 모형이라고도 한다.

소프트웨어 개발 과정의 한 단계가 끝나야만 다음 단계로 넘어갈 수 있는 선형 순차적 모형이다.

각 단계가 끝난 후에는 다음 단계를 수행하기 위한 결과물이 명확하게 산출되어야 한다.
타당성 검토 -> 계획 ->요구 분석 -> 설계 -> 구현(코딩) -> 시험(검사) -> 유지보수


3.프로토타입 모형 
프로토타입 모형은 사용자의 요구사항을 정확히 파악하기 위해 실제 개발될 소프트웨어에 대한
견본(시제)품(Prototype)을 만들어 최종 결과물을 예측하는 모형이다. 

4.나선형 모형
나선형 모형은 보헴이 제안한 것으로, 폭포수 모형과 프로토타입 모형의 장점에 위험 분석 기능을 
추가한 모형이다.

5.애자일 모형 
고객의 요구사항 변화에 유연하게 대응할 수 있도록 일정한 주기를 반복하면서 개발 과정을 진행한다.

애자일 모형은 스프린트 또는 이터레이션이라고 불리는 짧은 개발 주기를 반복하며, 반보고디는
주기마다 만들어지는 결과물에 대한 고객의 평가와 요구를 적극 수용한다. 

애자일 모형을 기반으로 하는 소프트웨어 개발 모형에는 스크럼, XP, 칸반, Lean, 크리스탈,
ASD, FDD, DSDM, DAD등이 있다. 


ㅁ 스크럼 기법
팀이 중심이 되어 개발의 효율성을 높인다는 의미가 내포된 용어 
스크럼은 팀원 스스로가 스크럼 팀을 구성해야 하며, 개발 작업에 관한 것을 스스로 
해결 할 수 있어야 한다. 
스크럼 팀은 제품 책임자, 스크럼 마스터, 개발팀으로 구성된다. 

ㅁ XP(eXtreme Programming)기법
수시로 발생하는 고객의 요구사항에 유연하게 대응하기 위해 고객의 참여와 개발 과정의
반복을 극대화하여 개발 생산성을 향상시키는 방법이다.

XP는 짧고 반복적인 개발 주기, 단순한 설계, 고객의 적극적인 참여를 통해 소프트웨어를
빠르게 개발하는 것을 목적으로 한다. 

릴리즈의 기간을 짧게 반복하면서 고객의 요구사항 반영에 대한 가시성을 높인다.

XP의 5가지 핵심 가치 : 의사소통(Communication), 
                       단순성(Simplicity),
                       용기(Courage),
                       존중(Respect),
                       피드벡(Feedback)
