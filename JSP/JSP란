JSP(Java Server Pages)란 = WebContainer(dynamic processing) 
Java 언어를 기반으로 하는 Server Side 스크립트 언어

HTML 코드에 Java 코드를 넣어 동적인 웹 페이지를 생성하는
웹 어플리케이션 도구
- JSP를 통해 정적인 HTML과 동적으로 생성된 contents(HTTP요청
  파라미터)를 혼합하여 사용할 수 있다.
- 즉, 사용자가 입력한 contents에 맞게 동적인 웹 페이지를 생성

oJSP의 내부적인 동작 과정
JSP문서는 백 그라운드에서 Servlet으로 자동으로 변환됨

1.JSP가 실행되면 WAS는 내부적으로 JSP파일을 Java Servlet(.java)
  으로 변환한다.
2.WAS는 이 변환한 Servlet을 동작하여 필요한 기능을 수행한다.
 1)WAS는 사용자 요청에 맞는 적절한 Servlet파일을 컴파일
   (.class 파일 생성)한다.
 2).class파일을 메모리에 올려 Servlet 객체를 만든다.
 3)메모리에 로드될 때 Servlet 객체를 초기화하는 init()메서드
실행됨
 4)WAS는 Request가 올 때마다 thread를 생성하여 처리한다.
 5)각 thread는 Servlet의 단일 객체에 대한 service() 메서드 실행
 6)service() 메서드는 요청에 맞는 적절한(doGet,doPost등)호출
3.수행 완료 후 생성된 데이터를 웹 페이지와 함께 클라이언트로
  응답한다.

JSP의 특징
- 스크립트 언어이기 때문에 자바 기능을 그대로 사용할 수 있다.
- Tomcat(WAS)이 이미 만들어놓은 객체(predifined values)를 사용한다.
   EX. request, response, session 등
- 사용자 정의 태그를 사용하여, 보다 효율적으로 웹 사이트를 구성
  할 수 있다.
- HTML 코드 안에 Java 코드가 있기 때문에 HTML 코드를 작성하기
  쉽다.
- Servlet과 다르게 JSP는 수정된 경우 재배포할 필요없이 TOMCAT(WAS)
  이 알아서 처리해준다.

참고 Predefined Values(또는 Implicit Object)
- 미리 정의된 객체로, WAS가 제공하는 객체를 의미한다.
  request: the HttpServletRequest Object
  response: the HttpServletResponse Object
  session: the HttpSession Object
  out : the PrintWriter Object
  application: the ServletContext Object

JSP 문법
1. JSP Expression
<%= expression%>
-JSP Expression element는 String으로 변환되어 Servlet의 출력에
 삽입된다.
-동적인 페이지를 생성한다.
 끝에 세미콜론(;)을 붙이지 않는다.

2.JSP Scriptlet
<% code fragment %>
- 간단한 값이 아닌 조금 더 복잡한 것을 수행하고자 할때 
  JSP Scriptlet을 사용한다.
- 임의의 Java 코드를 삽입할 수 있다.
- JSP Scriptlet Tag는 메서드가 아닌 변수만 선언할 수 있다.

3.JSP Directive
<%@ directive %>
- JSP페이지의 전체적인 구조에 영향을 미친다.
- 전체 구조에 대해 WAS에 지시를 내린다.
- 지시어에 들어가는 것:PAGE, include, taglib






























출처:
https://gmlwjd9405.github.io/2018/11/03/jsp.html
