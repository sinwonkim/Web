Heap영역 
- 객체와 배열이 생성되는 영역 

기본 타입 변수
-> 스택 영역에 직접 값을 가지고 있다. 

참조 타입 변수 
->힙 영역이나 메소드 영역의 객체 주소를 가진다. 

자바에서는 배열을 객체로 취급한다.
ex) int[] scores = {10,20,30};
             index  0   1  2  


참조 변수의 ==, != 연산 
기본 타입 변수의 ==, != 연산은 변수의 값이 같은지, 아닌지를 조사 하지만 참조 타입 변수들 간의 ==, != 연산은 동일한 객체를
참조하는지, 다른 객체를 참조하는지 알아볼 때 사용된다.
참조타입 변수의 값은 힙 영역의 객체 주소이므로 결국 주소 값을 비교하는 것이 된다. 
동일한 주소 값을 갖고 있다는 것은 동일한 객체를 참조한다는 의미이다. 
따라서 동일한 객체를 참조하고 있을 경우 == 연산의 결과는 true이고 != 연산의 결과는 false이다. 


참조 타입 변수는 힙 영역의 객체를 참조하지 않는다는 뜻으로 null(널)값을 가질 수 있다. 
null 값도 초기값으로 사용할 수 있기 때문에 null로 초기화된 참조 변수는 스택 영역에 생성된다.

참조 변수를 사용하면서 가장 많이 발생하는 예외 중 하나가 NullPointException이 있다. 
이 예외는 참조 타입 변수를 잘못 사용하면 발생한다. 
참조 타입 변수가 null을 가지고 있을 경우, 참조 타입 변수는 사용할 수 없다 
참조 타입 변수를 사용하는 것은 곧 객체를 사용하는 것을 의미하는데, 참조할 객체가 없으므로 사용할 수 가 없다. 

ex)
int[] intArray = null;   // 자바에서 배열도 참조변수인데  참조변수에 null로 초기화 한다는 것은 주소를 참조한다는것이 아니고 즉 힙영역에
                            주소를 참조한다는 말이 아니라   stack영역에 null로써 초기화 된 것이다.
intArray[0] = 10; // NullPointException // 참조 타입 변수를 잘못 사용  에러 나는 이유 intArray 변수가 참조하는 배열 객체가 없기 때문이다.


String 타입 
문자열을 String 변수에 저장한다는 말은 틀린 표현이다. 
문자열이 직접 변수에 저장되는 것이 아니라, 문자열은 String 객체로 생성되고 변수는 String 객체를 참조한다.
 
자바는 문자열 리터럴이 동일하다면 String 객체를 공유하도록 되어 있다. 
ex)
String name1 = "samsung";
String name2 = "samsung";
name1과 name2가 동일한 문자열 리터럴인 "samsung"을 참조할 경우 name1과 name2는 동일한 String 객체를 참조하게 된다.

일반적으로 변수에 문자열을 저장할 경우에는 문자열 리터럴을 사용하지만, new 연산자를 사용해서 직접 String 객체를 생성시킬 수도 있다.
new 연산자는 힙 영역에 새로운 객체를 만들때 사용하는 연산자로서 객체 생성 연산자라고 한다. 

String name1 = new String("samsung");
String name2 = new String("samsung");

이 경우 name1과 name2는 서로 다른 String 객체를 참조한다.
문자열만을 비교할 때는 String 객체의 equals() 메소드를 사용해야 한다.

equals() 메소드는 원본 문자열과 매개값으로 주어진 비교 문자열이 동일한지 비교한 후 true 또는 false를 리턴한다.
ex)
boolean result = str1.equals(str2);

str1과 str2를 비교 

타입
ㅁ 기본타입(정수) byte, char,short,int,long
ㅁ 기본타입(실수) float,double
ㅁ 기본타입(논리) boolean
ㅁ 참조타입 클래스, 인터페이스 

자바에서 프로그램 실행을 위해 main() 메소드가 필요하다는 것을 알고 있다.

그러나 publuc static void main(String[] args) {

 // 실행할 코드 
}

이건 String[] args = {};  java클래스로 프로그램을 실행하면 JVM은 길이가 0인 String 배열을 먼저 생성하고 main() 메소드를 호출할 때
매개값으로  전달한다.

