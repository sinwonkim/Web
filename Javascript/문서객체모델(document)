문서 객체 모델(DOM, Document Object Model)은 
브라우저가 HTML 페이지의 모델을 생성하고 이 페이지가 
브라우저 창에 보여지는 동안 자바스크립트를 이용하여 
웹 페이지의 내용에 접근하고 수정하기 위한 방법을 명시하고 있다.

DOM은 HTML에서 정의하는 것이 아니며, 그렇다고 자바스크립트의 일부로 구현된 명세도 아니다. 즉,완전히
별개의 규칙이다. DOM은 모든 주요 브라우저 벤더들이 구현하고 있으며, 기본적으로 다음의 두 가지 영역을
담당하고 있다.

HTML 페이지에 대한 모델 구성하기
브라우저는 웹 페이지를 로드한 후, 이 페이지에 대한 모델을 메모리에 생성한다.
DOM은 브라우저가 DOM 트리(DOM tree)를 이용하여 이 모델을 구성하는 방법을 명시한다.
DOM이 객체 모델이라고 불리는 이유는 모델(즉, DOM 트리)이 객체를 이용하여 구성되기 때문이다.

HTML 페이지에 접근하고 수정하기
DOM은 모델 내의 각 객체에 접근하고 내용을 수정하기 위한 속성과 메서드들을 정의하고 있다.
내용을 수정하면 브라우저에서 사용자가 보게 될 내용이 변경된다.

DOM을 API라고 부르는 사람도 있다. 사용자 인터페이스는 사람이 프로그램과 상호작용하는 방법을
정의하는 반면, API는 프로그램이 서로 간에 상호작용을 할 수 있도록 돕는다.
DOM은 우리가 작성하는 스크립트가 브라우저에게 어떤 것을 요청할 수 있는지, 그리고 사용자들이 보게 될
내용을 변경하려면 브라우저에게 어떻게 요청해야 하는지를 정의하고 있다.



문서 객체 모델 (줄여서 DOM) 최상위 객체는 document 객체이다. 
이 객체는 현재 브라우저 창 또는 탭에 로드된 웹 페이지를 표현한다.
 
 document 객체의 주요 속성
 
 속성
 document.title 현재 문서의 제목
 document.lastModified 현재 문서가 가장 마지막으로 수정된 날짜 
 docuemnt.URL 현재 문서의 URL을 문자열로 리턴한다.
 document.domain 현재 문서의 도메인 리턴한다. 
 
ex)
var story = '<p>holly</p>'+'<h2>'+document.title+'</h2>';
story += '이 문서 가장 최근에 수정된 날짜 : '+document.lastModified;
var el2 = document.getElementById('footer');
el2.innerHTML = story;

DOm을 이용하면 웹 페이지의 콘텐츠에 접근하여 수정이 가능하므로 주의해서 사용할 것 

메서드 
document.write() 문서에 텍스트를 출력한다.
document.getElementById()  id 특성 값이 일치하는 요소가 존재하면 해당 요소를 리턴한다.
docuemnt.createElement() 새로운 요소를 생성한다.
document.createTextNode() 새로운 텍스트 노드를 생성한다.
